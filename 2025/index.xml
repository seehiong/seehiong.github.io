<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2025 on See Hiong&#39;s Blog</title>
    <link>https://seehiong.github.io/2025/</link>
    <description>Recent content in 2025 on See Hiong&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 06 Apr 2025 20:00:00 +0800</lastBuildDate>
    <atom:link href="https://seehiong.github.io/2025/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MNIST Digit Classifier in TensorFlow</title>
      <link>https://seehiong.github.io/2025/mnist-digit-classifier-in-tensorflow/</link>
      <pubDate>Sun, 06 Apr 2025 20:00:00 +0800</pubDate>
      <guid>https://seehiong.github.io/2025/mnist-digit-classifier-in-tensorflow/</guid>
      <description>In this post, I walk through building a simple feedforward neural network using TensorFlow to classify handwritten digits from the MNIST dataset. From data preprocessing to training, evaluation, and visualizing predictions, this hands-on project reinforces key deep learning concepts covered in Andrew Ng’s course. The model achieved over 97% accuracy on the test set, and I also explored prediction confidence and misclassified samples. A solid foundation for experimenting with more advanced architectures ahead.</description>
    </item>
    <item>
      <title>Chat-Driven Insights with Chart.js</title>
      <link>https://seehiong.github.io/2025/chat-driven-insights-with-chartjs/</link>
      <pubDate>Sun, 09 Feb 2025 20:00:00 +0800</pubDate>
      <guid>https://seehiong.github.io/2025/chat-driven-insights-with-chartjs/</guid>
      <description>Enhance your Vue.js application by integrating chat capabilities with Chart.js and LLMs like OpenAI and Deepseek-R1. This post walks through adding a chat node to the Micronaut-Optimizer workflow, enabling dynamic interactions with optimization results. Learn how to configure environment variables, connect workflow nodes, and send Chart.js data to LLMs. See it in action with sample inputs and responses, and explore running Deepseek-R1 locally with Ollama.</description>
    </item>
    <item>
      <title>JMC: Java Performance Profiling Simplified</title>
      <link>https://seehiong.github.io/2025/jmc-java-performance-profiling-simplified/</link>
      <pubDate>Sun, 02 Feb 2025 20:00:00 +0800</pubDate>
      <guid>https://seehiong.github.io/2025/jmc-java-performance-profiling-simplified/</guid>
      <description>JDK Mission Control (JMC) is a powerful tool for low-overhead Java application profiling and performance analysis. In this post, I explore JMC’s capabilities while optimizing inference performance for Micronaut-Llama3 with DeepSeek-R1. I walk through setup, profiling with Flight Recorder, and identifying bottlenecks using flame graphs. Key optimizations, such as refining ByteVector operations, significantly enhance performance. A comparison with VisualVM highlights JMC’s advantages, making it the go-to tool for in-depth Java profiling. If you&amp;rsquo;re looking to fine-tune your Java applications, JMC provides essential insights for optimization.</description>
    </item>
    <item>
      <title>Building a Vue.js Frontend for Combinatorial Optimization Problems</title>
      <link>https://seehiong.github.io/2025/building-a-vuejs-frontend-for-combinatorial-optimization-problem/</link>
      <pubDate>Sun, 26 Jan 2025 10:00:00 +0800</pubDate>
      <guid>https://seehiong.github.io/2025/building-a-vuejs-frontend-for-combinatorial-optimization-problem/</guid>
      <description>In this post, I’ll walk you through the development of a Vue.js frontend application designed to complement my previous work on a flexible optimizer framework built with Micronaut. This frontend provides a visual interface for designing, managing, and optimizing workflows, with a focus on solving combinatorial optimization problems like the Traveling Salesman Problem (TSP). The app features a drag-and-drop UI, enabling users to define optimization problems graphically without relying on tools like Postman. By connecting inputs, transformations, and outputs through Workflow Nodes, users can visualize and compare the performance of backend optimization algorithms across different datasets.</description>
    </item>
  </channel>
</rss>
