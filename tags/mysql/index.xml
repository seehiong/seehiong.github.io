<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MySQL on See Hiong&#39;s Blog</title>
    <link>https://seehiong.github.io/tags/mysql/</link>
    <description>Recent content in MySQL on See Hiong&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 13 Jun 2021 20:00:00 +0800</lastBuildDate>
    <atom:link href="https://seehiong.github.io/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CI/CD Pipeline on Pi Cluster (I)</title>
      <link>https://seehiong.github.io/posts/2021/06/ci/cd-pipeline-on-pi-cluster-i/</link>
      <pubDate>Sun, 13 Jun 2021 20:00:00 +0800</pubDate>
      <guid>https://seehiong.github.io/posts/2021/06/ci/cd-pipeline-on-pi-cluster-i/</guid>
      <description>In this series, I documented my journey building a CI/CD pipeline on a Raspberry Pi Cluster, featuring 3 master and 1 worker nodes, all housed in a custom LEGO structure. The setup includes tools like Metallb for load balancing, along with specific volumes for MySQL, Gitea, Jenkins, and Maven-agent. I detailed the installation processes for MySQL, Gitea, Jenkins, and Maven-agent, complete with YAML deployment files. The configuration steps for Jenkins, both for Kubernetes and Gitea integration, were outlined. The troubleshooting section covers issues related to Kubernetes connection errors and finding the Jenkins initial admin password. The final result showcases a functional CI/CD pipeline: when code is committed, it triggers the CI pipeline, with the Maven-agent building and compiling the code successfully.</description>
    </item>
    <item>
      <title>Gitea for K8s Cluster</title>
      <link>https://seehiong.github.io/posts/2020/07/gitea-for-k8s-cluster/</link>
      <pubDate>Fri, 10 Jul 2020 20:00:00 +0800</pubDate>
      <guid>https://seehiong.github.io/posts/2020/07/gitea-for-k8s-cluster/</guid>
      <description>In my recent endeavor, I spent 40 minutes setting up Gitea on my Kubernetes Pi cluster, granting me absolute control over personal Git repositories. I seamlessly integrated MySQL, using Docker images and Kubernetes configurations. The meticulous setup involved creating necessary paths on an external HDD, configuring persistent volumes, and ensuring a smooth deployment. I prepared MySQL for Gitea, creating a user, database, and granting privileges. Gitea installation via Docker and subsequent exposure to external access using NodePort were executed flawlessly. A troubleshooting tip addressed a MySQL access issue. Now, my Gitea on Kubernetes Pi Cluster is fully operational for efficient repository management.</description>
    </item>
    <item>
      <title>Gitea for MicroK8s Cluster</title>
      <link>https://seehiong.github.io/posts/2020/06/gitea-for-microk8s-cluster/</link>
      <pubDate>Mon, 29 Jun 2020 20:00:00 +0800</pubDate>
      <guid>https://seehiong.github.io/posts/2020/06/gitea-for-microk8s-cluster/</guid>
      <description>I dedicated 45 minutes to set up Gitea on my Raspberry Pi cluster using MicroK8s. Gitea, a self-hosted Git service, grants my team cost savings and enhanced server control. I ensured a smooth installation by preparing MySQL, creating required paths on an external HDD, and configuring persistent volumes. Following MySQL setup, I seamlessly prepared the database and moved on to setting up Gitea with Docker, utilizing a docker-compose.yml file. After injecting images into MicroK8s cache, I exposed Gitea externally using NodePort. Troubleshooting tips were handy, addressing MySQL connection issues. My self-hosted Git service is now ready for efficient collaboration.</description>
    </item>
  </channel>
</rss>
