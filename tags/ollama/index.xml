<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ollama on See Hiong&#39;s Blog</title>
    <link>//localhost:1313/tags/ollama/</link>
    <description>Recent content in Ollama on See Hiong&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 17 Aug 2024 20:00:00 +0800</lastBuildDate>
    <atom:link href="//localhost:1313/tags/ollama/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Unleashing Text Generation with NVIDIA Jetson Orin NX</title>
      <link>//localhost:1313/2024/unleashing-text-generation-with-nvidia-jetson-orin-nx/</link>
      <pubDate>Sat, 17 Aug 2024 20:00:00 +0800</pubDate>
      <guid>//localhost:1313/2024/unleashing-text-generation-with-nvidia-jetson-orin-nx/</guid>
      <description>&lt;p&gt;Navigating through the &lt;a href=&#34;https://www.jetson-ai-lab.com/&#34; target=&#34;_blank&#34;&gt;NVIDIA Jetson AI Lab&lt;/a&gt; has been an exhilarating experience, showcasing the potential of generative AI powered by NVIDIA® Jetson™. With a plethora of labs to explore, it’s challenging to cover everything in a limited time. In this post, I&amp;rsquo;ll focus on labs related to text generation.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;preparation&#34;&gt;Preparation&lt;/h2&gt;&#xA;&lt;p&gt;If you follow my &lt;a href=&#34;//localhost:1313/2024/exploring-nvidia-jetson-orin-nx-flashing-and-setup-guide/&#34;&gt;Jetson Orin NX flashing guide&lt;/a&gt;, you might have noticed that a browser is not pre-installed. I recommend installing  &lt;a href=&#34;https://brave.com/&#34; target=&#34;_blank&#34;&gt;Brave&lt;/a&gt;, a browser that blocks ads and conserves data. To install it, simply run:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building Advanced RAG Applications with MyScaleDB and LlamaIndex</title>
      <link>//localhost:1313/2024/building-advanced-rag-applications-with-myscaledb-and-llamaindex/</link>
      <pubDate>Sat, 15 Jun 2024 20:00:00 +0800</pubDate>
      <guid>//localhost:1313/2024/building-advanced-rag-applications-with-myscaledb-and-llamaindex/</guid>
      <description>&lt;p&gt;In this post, I will explore &lt;a href=&#34;https://github.com/myscale/myscaledb&#34; target=&#34;_blank&#34;&gt;MyScaleDB&lt;/a&gt;, an open-source, high-performance SQL vector database built on ClickHouse, and &lt;a href=&#34;https://www.llamaindex.ai/&#34; target=&#34;_blank&#34;&gt;LlamaIndex&lt;/a&gt;, the leading data framework for building LLM applications.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;&#xA;&lt;p&gt;After installing &lt;a href=&#34;https://vscodium.com/#install&#34; target=&#34;_blank&#34;&gt;VSCodium&lt;/a&gt; as my primary IDE, I proceeded with installing the Python extension via &lt;a href=&#34;https://open-vsx.org/vscode/item?itemName=ms-python.python&#34; target=&#34;_blank&#34;&gt;Marketplace Link&lt;/a&gt;.&#xA;Next, I created the &lt;a href=&#34;https://docs.python.org/3/library/venv.html&#34; target=&#34;_blank&#34;&gt;virtual environment&lt;/a&gt; using venv:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create the envrionment&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python -m venv myscaledb&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Activate the environment&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;myscaledb&lt;span style=&#34;color:#ae81ff&#34;&gt;\S&lt;/span&gt;cripts&lt;span style=&#34;color:#ae81ff&#34;&gt;\a&lt;/span&gt;ctivate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
  </channel>
</rss>
