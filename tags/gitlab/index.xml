<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GitLab on See Hiong&#39;s Blog</title>
    <link>//localhost:1313/tags/gitlab/</link>
    <description>Recent content in GitLab on See Hiong&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 07 Jul 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="//localhost:1313/tags/gitlab/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Integrating Draw.io and PlantUML with GitLab</title>
      <link>//localhost:1313/2024/integrating-draw-io-and-plantuml-with-gitlab/</link>
      <pubDate>Sat, 06 Jul 2024 10:00:00 +0800</pubDate>
      <guid>//localhost:1313/2024/integrating-draw-io-and-plantuml-with-gitlab/</guid>
      <description>&lt;p&gt;As we are migrating away from &lt;a href=&#34;https://www.lucidchart.com/&#34; target=&#34;_blank&#34;&gt;Lucidchart&lt;/a&gt; to &lt;a href=&#34;https://www.drawio.com/&#34; target=&#34;_blank&#34;&gt;draw.io&lt;/a&gt;, a security-first diagramming for teams, I will be documenting the steps to integrate draw.io with GitLab.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;configure-diagramsnet-server&#34;&gt;Configure Diagrams.net Server&lt;/h2&gt;&#xA;&lt;p&gt;Referencing the official &lt;a href=&#34;https://docs.gitlab.com/ee/administration/integration/diagrams_net.html&#34; target=&#34;_blank&#34;&gt;Diagrams.net&lt;/a&gt; documentation, I run the diagrams.net container in Docker, using the following command:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run --rm --name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;draw&amp;#34;&lt;/span&gt; -p 8888:8080 -p 8443:8443 jgraph/drawio&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Setting Up and Using KServe with Kubeflow</title>
      <link>//localhost:1313/2024/setting-up-and-using-kserve-with-kubeflow/</link>
      <pubDate>Sun, 30 Jun 2024 10:00:00 +0800</pubDate>
      <guid>//localhost:1313/2024/setting-up-and-using-kserve-with-kubeflow/</guid>
      <description>&lt;p&gt;Expanding on my previous post on &lt;a href=&#34;//localhost:1313/2024/setting-up-kubeflow-on-kubernetes-a-step-by-step-guide/&#34;&gt;Kubeflow&lt;/a&gt;, I will explore &lt;a href=&#34;https://kserve.github.io/website/latest/&#34; target=&#34;_blank&#34;&gt;KServe&lt;/a&gt;, a standard Model Inference Platform on Kubernetes built for highly scalable use cases.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;first-kserve-endpoint&#34;&gt;First KServe Endpoint&lt;/h2&gt;&#xA;&lt;p&gt;Referencing &lt;a href=&#34;https://github.com/kserve/kserve/blob/master/docs/samples/istio-dex/README.md&#34; target=&#34;_blank&#34;&gt;KServe on Kubeflow with Istio-Dex&lt;/a&gt;, below is the &lt;em&gt;sklearn.yaml&lt;/em&gt; configuration. Note the sidecar annotation, which instructs not to inject the istio sidecar. Without this annotation, you may encounter error (refer to the troubleshooting section):&lt;/p&gt;</description>
    </item>
    <item>
      <title>GitLab Setup: Installation, Migration, and CI/CD Simplified</title>
      <link>//localhost:1313/archives/2023/gitlab-setup-installation-migration-and-ci-cd-simplified/</link>
      <pubDate>Sun, 24 Dec 2023 20:00:00 +0800</pubDate>
      <guid>//localhost:1313/archives/2023/gitlab-setup-installation-migration-and-ci-cd-simplified/</guid>
      <description>&lt;p&gt;In this guide, I&amp;rsquo;ll walk you through the process of installing &lt;a href=&#34;https://docs.gitlab.com/omnibus/installation/&#34; target=&#34;_blank&#34;&gt;GitLab&lt;/a&gt;, a comprehensive suite of tools for version control, continuous integration, continuous delivery, and more, in my Home Lab collection.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;preparation&#34;&gt;Preparation&lt;/h2&gt;&#xA;&lt;p&gt;After obtaining the latest &lt;a href=&#34;https://ubuntu.com/download/server&#34; target=&#34;_blank&#34;&gt;Ubuntu Server&lt;/a&gt;, I utilized &lt;a href=&#34;https://rufus.ie/en/&#34; target=&#34;_blank&#34;&gt;Rufus&lt;/a&gt;, a utility for formatting and creating bootable USB flash drives.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;&#xA;&lt;p&gt;Following the &lt;a href=&#34;https://packages.gitlab.com/gitlab/gitlab-ce/install&#34; target=&#34;_blank&#34;&gt;installation instructions&lt;/a&gt;, initiate a quick installation using the following command:&lt;/p&gt;</description>
    </item>
    <item>
      <title>CI/CD Pipeline on Pi Cluster (IV)</title>
      <link>//localhost:1313/archives/2021/building-a-ci-cd-pipeline-on-a-raspberry-pi-cluster-part-4/</link>
      <pubDate>Sun, 18 Jul 2021 20:00:00 +0800</pubDate>
      <guid>//localhost:1313/archives/2021/building-a-ci-cd-pipeline-on-a-raspberry-pi-cluster-part-4/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/pipeline4/raspberry-pi-enclosed-in-lego-structure.jpeg&#34; alt=&#34;raspberry-pi-enclosed-in-lego-structure&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Building a CI/CD pipeline on a Raspberry PI Cluster (Part 4), with SonarQube integrating into Jenkins and Gitlab&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;building-a-cicd-pipeline-on-a-raspberry-pi-cluster-part-iv&#34;&gt;Building a CI/CD pipeline on a Raspberry PI Cluster (Part IV)&lt;/h1&gt;&#xA;&lt;p&gt;&lt;em&gt;(Total Setup Time: 15 mins)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;In continuation from &lt;a href=&#34;//localhost:1313/archives/2021/building-a-ci-cd-pipeline-on-a-raspberry-pi-cluster-part-3/&#34;&gt;part 3&lt;/a&gt; of this guide, I will add &lt;a href=&#34;https://www.sonarqube.org/&#34; target=&#34;_blank&#34;&gt;SonarQube&lt;/a&gt; into my CI/CD pipeline. This will enahnce our workflow with continuous code quality and code security.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
