<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gemma on See Hiong&#39;s Blog</title>
    <link>//localhost:1313/tags/gemma/</link>
    <description>Recent content in Gemma on See Hiong&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 29 Mar 2024 20:00:00 +0800</lastBuildDate>
    <atom:link href="//localhost:1313/tags/gemma/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Coding with CrewAI: AI Orchestration Simplified</title>
      <link>//localhost:1313/2024/coding-with-crewai-ai-orchestration-simplified/</link>
      <pubDate>Fri, 29 Mar 2024 20:00:00 +0800</pubDate>
      <guid>//localhost:1313/2024/coding-with-crewai-ai-orchestration-simplified/</guid>
      <description>&lt;p&gt;Welcome to an exploration of &lt;a href=&#34;https://www.crewai.io/&#34; target=&#34;_blank&#34;&gt;CrewAI&lt;/a&gt;, a state-of-the-art framework designed to orchestrate autonomous AI agents. In this post, we&amp;rsquo;ll dive into the practical aspects of CrewAI, discovering its functionalities and potential applications.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h2&gt;&#xA;&lt;p&gt;To dive into the world of AI-driven creativity, let&amp;rsquo;s start by setting up our environment. We&amp;rsquo;ll create a dedicated Conda environment to ensure seamless integration with CrewAI:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create a new Conda environment&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;conda create -n crewai python&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;3.10&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Active the environment&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;conda activate crewai&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>AutoPilot Setup for VS Code</title>
      <link>//localhost:1313/2024/autopilot-setup-for-vs-code/</link>
      <pubDate>Sat, 16 Mar 2024 10:00:00 +0800</pubDate>
      <guid>//localhost:1313/2024/autopilot-setup-for-vs-code/</guid>
      <description>&lt;p&gt;In this post, I&amp;rsquo;m going to demonstrate the setup of &lt;a href=&#34;https://continue.dev/docs/quickstart&#34; target=&#34;_blank&#34;&gt;Continue&lt;/a&gt;, an open-source autopilot designed for VS Code.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h2&gt;&#xA;&lt;p&gt;Once you&amp;rsquo;ve installed the plugin from the market place, let&amp;rsquo;s proceed by adding Continue to the right sidebar of VS Code, as recommended.&lt;/p&gt;&#xA;&lt;h3 id=&#34;provider---lm-studio&#34;&gt;Provider - LM Studio&lt;/h3&gt;&#xA;&lt;p&gt;First, on my Windows machine, I&amp;rsquo;ll execute &lt;a href=&#34;https://lmstudio.ai/&#34; target=&#34;_blank&#34;&gt;LM Studio&lt;/a&gt; and download &lt;a href=&#34;https://huggingface.co/lmstudio-ai/gemma-2b-it-GGUF&#34; target=&#34;_blank&#34;&gt;Google&amp;rsquo;s Gemma 2B Instruct&lt;/a&gt; model.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
