<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Anaconda on See Hiong&#39;s Blog</title>
    <link>https://seehiong.github.io/tags/anaconda/</link>
    <description>Recent content in Anaconda on See Hiong&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 02 Dec 2023 20:00:00 +0800</lastBuildDate>
    <atom:link href="https://seehiong.github.io/tags/anaconda/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Exploring AutoGen with LM Studio and Local LLM</title>
      <link>https://seehiong.github.io/archives/2023/exploring-autogen-with-lm-studio-and-local-llm/</link>
      <pubDate>Sat, 02 Dec 2023 20:00:00 +0800</pubDate>
      <guid>https://seehiong.github.io/archives/2023/exploring-autogen-with-lm-studio-and-local-llm/</guid>
      <description>&lt;p&gt;AutoGen, an innovative framework available on &lt;a href=&#34;https://github.com/microsoft/autogen&#34; target=&#34;_blank&#34;&gt;GitHub&lt;/a&gt;, empowers the development of LLM (Large Language Model) applications. These applications utilize multiple agents that engage in conversation to collaboratively solve tasks.&lt;/p&gt;&#xA;&lt;p&gt;In conjunction with AutoGen, &lt;a href=&#34;https://lmstudio.ai/&#34; target=&#34;_blank&#34;&gt;LM Studio&lt;/a&gt; provides a platform to discover, download, and run local LLMs. In this blog post, we&amp;rsquo;ll delve into the integration of AutoGen with LM Studio, showcasing a step-by-step guide on setting up a local LLM application served through LM Studio.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
