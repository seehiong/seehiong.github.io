<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SonarQube on See Hiong&#39;s Blog</title>
    <link>https://seehiong.github.io/tags/sonarqube/</link>
    <description>Recent content in SonarQube on See Hiong&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 18 Jul 2021 20:00:00 +0800</lastBuildDate>
    <atom:link href="https://seehiong.github.io/tags/sonarqube/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CI/CD Pipeline on Pi Cluster (IV)</title>
      <link>https://seehiong.github.io/posts/2021/07/ci/cd-pipeline-on-pi-cluster-iv/</link>
      <pubDate>Sun, 18 Jul 2021 20:00:00 +0800</pubDate>
      <guid>https://seehiong.github.io/posts/2021/07/ci/cd-pipeline-on-pi-cluster-iv/</guid>
      <description>In the fourth part of my Raspberry Pi CI/CD pipeline series, I integrated SonarQube into the workflow for continuous code quality and security. I installed SonarQube on my Raspberry Pi Cluster, utilizing a custom Docker image. Additionally, I replaced Gitea with Gitlab for enhanced compatibility with SonarQube. I built and deployed Gitlab on the cluster, managing persistent storage with Longhorn volumes. For seamless integration, I configured Gitlab settings, created a Jenkins user, and set up access tokens. Lastly, I prepared Jenkins by installing necessary plugins and establishing connections with Gitlab. The result is an extended CI/CD pipeline with SonarQube, Jenkins, and Gitlab on a Raspberry Pi Cluster.</description>
    </item>
  </channel>
</rss>
