<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PostgreSQL on See Hiong&#39;s Blog</title>
    <link>https://seehiong.github.io/tags/postgresql/</link>
    <description>Recent content in PostgreSQL on See Hiong&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 02 May 2025 10:00:00 +0800</lastBuildDate>
    <atom:link href="https://seehiong.github.io/tags/postgresql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building a Recommender System</title>
      <link>https://seehiong.github.io/posts/2025/05/building-a-recommender-system/</link>
      <pubDate>Fri, 02 May 2025 10:00:00 +0800</pubDate>
      <guid>https://seehiong.github.io/posts/2025/05/building-a-recommender-system/</guid>
      <description>In this post, we walk through the process of building a movie recommender system using deep learning embeddings and PostgreSQL with pgvector. You&amp;rsquo;ll learn how to extract and normalize item features, generate vector embeddings with TensorFlow, store them in a Postgres database, and perform similarity searches to recommend relevant content. The system leverages cosine distance for finding similar items and user preferences, enabling efficient, scalable recommendations.</description>
    </item>
    <item>
      <title>Streamlining API Management with Kong</title>
      <link>https://seehiong.github.io/posts/2023/12/streamlining-api-management-with-kong/</link>
      <pubDate>Sun, 31 Dec 2023 20:00:00 +0800</pubDate>
      <guid>https://seehiong.github.io/posts/2023/12/streamlining-api-management-with-kong/</guid>
      <description>This comprehensive guide walks you through integrating Kong, a powerful unified API platform, into your home lab environment. Starting with Docker installation and a custom Kong image, it covers PostgreSQL deployment, MetalLB setup for load balancing, and Kong service and route configuration. The post concludes with troubleshooting tips and instructions for deploying your customized Kong image in a K3s cluster. This step-by-step tutorial empowers you to efficiently manage APIs in your home lab using Kong.</description>
    </item>
    <item>
      <title>Autofill PDF with LangChain and LangFlow</title>
      <link>https://seehiong.github.io/posts/2023/05/autofill-pdf-with-langchain-and-langflow/</link>
      <pubDate>Fri, 26 May 2023 20:00:00 +0800</pubDate>
      <guid>https://seehiong.github.io/posts/2023/05/autofill-pdf-with-langchain-and-langflow/</guid>
      <description>In this journey, I explore automating PDF autofill using LangChain and LangFlow. Leveraging LangFlow and OpenAI, I streamline the employment form completion process, demonstrating steps to install LangFlow and set up a PostgreSQL table. Despite encountering challenges in prototyping with LangFlow, the exploration progresses to auto-fill PDFs. After extracting form fields and LLaMA model setup, I employ LangChain to fetch PostgreSQL data. Concluding with Python manipulation to interpolate and update the PDF, the process achieves seamless auto-fill. Dive into the details, overcome challenges, and witness the power of LangChain and LangFlow in revolutionizing PDF automation.</description>
    </item>
    <item>
      <title>Running GPT4All for your PostgreSQL with LangChain</title>
      <link>https://seehiong.github.io/posts/2023/05/running-gpt4all-for-your-postgresql-with-langchain/</link>
      <pubDate>Sun, 21 May 2023 20:00:00 +0800</pubDate>
      <guid>https://seehiong.github.io/posts/2023/05/running-gpt4all-for-your-postgresql-with-langchain/</guid>
      <description>In this exploration, I guide you through setting up GPT4All on a Windows PC and demonstrate its synergy with SQL Chain for PostgreSQL queries using LangChain. Utilizing Jupyter Notebook and prerequisites like PostgreSQL and GPT4All-J v1.3-groovy, I install dependencies and showcase LangChain and GPT4All model setup. Navigating an Open Source Shakespeare database, I provide an ER diagram for clarity. Querying GPT4All through LangChain, we delve into PostgreSQL queries and also compare responses with OpenAI. The comprehensive walkthrough empowers you to seamlessly integrate GPT4All into your PostgreSQL workflows for efficient and dynamic interactions.</description>
    </item>
  </channel>
</rss>
