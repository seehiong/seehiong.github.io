<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reverse Engineering on See Hiong&#39;s Blog</title>
    <link>https://seehiong.github.io/tags/reverse-engineering/</link>
    <description>Recent content in Reverse Engineering on See Hiong&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 31 Aug 2025 10:00:00 +0800</lastBuildDate>
    <atom:link href="https://seehiong.github.io/tags/reverse-engineering/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reverse-Engineering PDFs with AI Tools</title>
      <link>https://seehiong.github.io/posts/2025/08/reverse-engineering-pdfs-with-ai-tools/</link>
      <pubDate>Sun, 31 Aug 2025 10:00:00 +0800</pubDate>
      <guid>https://seehiong.github.io/posts/2025/08/reverse-engineering-pdfs-with-ai-tools/</guid>
      <description>What started as a corrupted PDF upload led to a deep exploration of PDF internals using tools like qpdf, PyMuPDF, and Grok Code Fast 1. This post walks through reconstructing broken files, extracting embedded images, and pulling structured data—all while testing the capabilities of AI-powered tools for reverse engineering. A practical guide for anyone curious about what’s really inside a PDF.</description>
    </item>
  </channel>
</rss>
