<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pipeline on See Hiong&#39;s Blog</title>
    <link>http://localhost:1313/tags/pipeline/</link>
    <description>Recent content in Pipeline on See Hiong&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 23 Jun 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/pipeline/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GitLab Setup: Installation, Migration, and CI/CD Simplified</title>
      <link>http://localhost:1313/archives/2023/gitlab-setup-installation-migration-and-ci-cd-simplified/</link>
      <pubDate>Sun, 24 Dec 2023 20:00:00 +0800</pubDate>
      <guid>http://localhost:1313/archives/2023/gitlab-setup-installation-migration-and-ci-cd-simplified/</guid>
      <description>&lt;p&gt;In this guide, I&amp;rsquo;ll walk you through the process of installing &lt;a href=&#34;https://docs.gitlab.com/omnibus/installation/&#34; target=&#34;_blank&#34;&gt;GitLab&lt;/a&gt;, a comprehensive suite of tools for version control, continuous integration, continuous delivery, and more, in my Home Lab collection.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;preparation&#34;&gt;Preparation&lt;/h2&gt;&#xA;&lt;p&gt;After obtaining the latest &lt;a href=&#34;https://ubuntu.com/download/server&#34; target=&#34;_blank&#34;&gt;Ubuntu Server&lt;/a&gt;, I utilized &lt;a href=&#34;https://rufus.ie/en/&#34; target=&#34;_blank&#34;&gt;Rufus&lt;/a&gt;, a utility for formatting and creating bootable USB flash drives.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;&#xA;&lt;p&gt;Following the &lt;a href=&#34;https://packages.gitlab.com/gitlab/gitlab-ce/install&#34; target=&#34;_blank&#34;&gt;installation instructions&lt;/a&gt;, initiate a quick installation using the following command:&lt;/p&gt;</description>
    </item>
    <item>
      <title>CI/CD Pipeline on Pi Cluster (IV)</title>
      <link>http://localhost:1313/archives/2021/building-a-ci-cd-pipeline-on-a-raspberry-pi-cluster-part-4/</link>
      <pubDate>Sun, 18 Jul 2021 20:00:00 +0800</pubDate>
      <guid>http://localhost:1313/archives/2021/building-a-ci-cd-pipeline-on-a-raspberry-pi-cluster-part-4/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/pipeline4/raspberry-pi-enclosed-in-lego-structure.jpeg&#34; alt=&#34;raspberry-pi-enclosed-in-lego-structure&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Building a CI/CD pipeline on a Raspberry PI Cluster (Part 4), with SonarQube integrating into Jenkins and Gitlab&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;building-a-cicd-pipeline-on-a-raspberry-pi-cluster-part-iv&#34;&gt;Building a CI/CD pipeline on a Raspberry PI Cluster (Part IV)&lt;/h1&gt;&#xA;&lt;p&gt;&lt;em&gt;(Total Setup Time: 15 mins)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;In continuation from &lt;a href=&#34;http://localhost:1313/archives/2021/building-a-ci-cd-pipeline-on-a-raspberry-pi-cluster-part-3/&#34; target=&#34;_blank&#34;&gt;part 3&lt;/a&gt; of this guide, I will add &lt;a href=&#34;https://www.sonarqube.org/&#34; target=&#34;_blank&#34;&gt;SonarQube&lt;/a&gt; into my CI/CD pipeline. This will enahnce our workflow with continuous code quality and code security.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CI/CD Pipeline on Pi Cluster (III)</title>
      <link>http://localhost:1313/archives/2021/building-a-ci-cd-pipeline-on-a-raspberry-pi-cluster-part-3/</link>
      <pubDate>Sun, 04 Jul 2021 20:00:00 +0800</pubDate>
      <guid>http://localhost:1313/archives/2021/building-a-ci-cd-pipeline-on-a-raspberry-pi-cluster-part-3/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/pipeline3/raspberry-pi-enclosed-in-lego-structure.jpeg&#34; alt=&#34;raspberry-pi-enclosed-in-lego-structure&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Building a CI/CD pipeline on a Raspberry PI Cluster (Part 3), with JFrog Container Registry supporting our Docker containers and Helm Chart repositories&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;building-a-cicd-pipeline-on-a-raspberry-pi-cluster-part-iii&#34;&gt;Building a CI/CD pipeline on a Raspberry PI Cluster (Part III)&lt;/h1&gt;&#xA;&lt;p&gt;&lt;em&gt;(Total Setup Time: 15 mins)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Continue from &lt;a href=&#34;http://localhost:1313/archives/2021/building-a-ci-cd-pipeline-on-a-raspberry-pi-cluster-part-2/&#34; target=&#34;_blank&#34;&gt;part 2&lt;/a&gt; of this guide, I will add &lt;a href=&#34;https://jfrog.com/container-registry/&#34; target=&#34;_blank&#34;&gt;JFrog Container Registry&lt;/a&gt; to my CI/CD pipeline.&lt;/p&gt;&#xA;&lt;h2 id=&#34;installing-container-registry&#34;&gt;Installing Container Registry&lt;/h2&gt;&#xA;&lt;p&gt;&lt;em&gt;(5 mins)&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>CI/CD Pipeline on Pi Cluster (II)</title>
      <link>http://localhost:1313/archives/2021/building-a-ci-cd-pipeline-on-a-raspberry-pi-cluster-part-2/</link>
      <pubDate>Mon, 21 Jun 2021 20:00:00 +0800</pubDate>
      <guid>http://localhost:1313/archives/2021/building-a-ci-cd-pipeline-on-a-raspberry-pi-cluster-part-2/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/pipeline2/raspberry-pi-enclosed-in-lego-structure.jpeg&#34; alt=&#34;raspberry-pi-enclosed-in-lego-structure&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Building a CI/CD pipeline part 2 on a Raspberry PI Cluster, with JFrog Artifactory as the repository manager&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;building-a-cicd-pipeline-on-a-raspberry-pi-cluster-part-ii&#34;&gt;Building a CI/CD pipeline on a Raspberry PI Cluster (Part II)&lt;/h1&gt;&#xA;&lt;p&gt;&lt;em&gt;(Total Setup Time: 40 mins)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Continuing from &lt;a href=&#34;http://localhost:1313/archives/2021/building-a-ci-cd-pipeline-on-a-raspberry-pi-cluster-part-1/&#34; target=&#34;_blank&#34;&gt;part I&lt;/a&gt; of this guide, I will add &lt;a href=&#34;https://jfrog.com/artifactory/&#34; target=&#34;_blank&#34;&gt;JFrog Artifactory&lt;/a&gt; to my CI/CD pipeline.&lt;/p&gt;&#xA;&lt;h2 id=&#34;preparation&#34;&gt;Preparation&lt;/h2&gt;&#xA;&lt;p&gt;&lt;em&gt;(1 min)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Referencing from my previous post on &lt;a href=&#34;http://localhost:1313/archives/2020/jenkins-maven-agent-for-kubernetes/&#34; target=&#34;_blank&#34;&gt;maven agent&lt;/a&gt;, let&amp;rsquo;s configure maven-agent to mount Longhorn volume. Navigate to &lt;em&gt;Manage Jenkins &amp;gt; Manage Nodes and Clouds &amp;gt; Configure Clouds&lt;/em&gt;. Expand on Pod Template details and add a volume:&lt;/p&gt;</description>
    </item>
    <item>
      <title>CI/CD Pipeline on Pi Cluster (I)</title>
      <link>http://localhost:1313/archives/2021/building-a-ci-cd-pipeline-on-a-raspberry-pi-cluster-part-1/</link>
      <pubDate>Sun, 13 Jun 2021 20:00:00 +0800</pubDate>
      <guid>http://localhost:1313/archives/2021/building-a-ci-cd-pipeline-on-a-raspberry-pi-cluster-part-1/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/pipeline1/raspberry-pi-enclosed-in-lego-structure.jpeg&#34; alt=&#34;raspberry-pi-enclosed-in-lego-structure&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Building a CI/CD pipeline on a Raspberry PI Cluster, with 3 master and 1 worker nodes, enclosed in a custom-made LEGO structure&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;building-a-cicd-pipeline-on-a-raspberry-pi-cluster-part-i&#34;&gt;Building a CI/CD pipeline on a Raspberry PI Cluster (Part I)&lt;/h1&gt;&#xA;&lt;p&gt;&lt;em&gt;(Total Setup Time: 40 mins)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;In this series, I will build my own CI/CD pipeline, with tools that are configured to run on &lt;a href=&#34;http://localhost:1313/archives/2021/raspberry-pi-cluster-with-longhorn/&#34; target=&#34;_blank&#34;&gt;Raspberry PI Cluster and Longhorn&lt;/a&gt;, a HA Raspberry PI Cluster. By end of this guide, you will have a &lt;a href=&#34;https://gitea.io/en-us/&#34; target=&#34;_blank&#34;&gt;self-hosted Git service&lt;/a&gt;, working hand-in-hand with &lt;a href=&#34;https://www.jenkins.io/&#34; target=&#34;_blank&#34;&gt;Jenkins&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
