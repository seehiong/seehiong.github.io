<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MicroK8s on See Hiong&#39;s Blog</title>
    <link>http://localhost:1313/tags/microk8s/</link>
    <description>Recent content in MicroK8s on See Hiong&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 10 Aug 2024 10:00:00 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/microk8s/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Scaling Kafka Workloads with KEDA in Kubernetes</title>
      <link>http://localhost:1313/2024/scaling-kafka-workloads-with-keda-in-kubernetes/</link>
      <pubDate>Sat, 10 Aug 2024 10:00:00 +0800</pubDate>
      <guid>http://localhost:1313/2024/scaling-kafka-workloads-with-keda-in-kubernetes/</guid>
      <description>&lt;p&gt;Building up my previous &lt;a href=&#34;http://localhost:1313/2024/setting-up-kafka-with-microk8s-and-multipass/&#34; target=&#34;_blank&#34;&gt;Kafka post&lt;/a&gt;, this article focuses on leveraging KEDA to scale Kafka consumer workloads dynamically. &lt;a href=&#34;https://keda.sh/&#34; target=&#34;_blank&#34;&gt;KEDA&lt;/a&gt; is a Kubernetes-based Event Driven Autoscaler that enables automatic scaling of pods based on the volume of events to be processed.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;keda-setup&#34;&gt;KEDA Setup&lt;/h2&gt;&#xA;&lt;p&gt;To begin, after accessing the &lt;em&gt;mk8s-vm&lt;/em&gt;, simply install KEDA with the following commands:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo microk8s enable community&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo microk8s enable keda&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Disable KEDA if necessary&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo microk8s disable keda&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Setting Up Kafka with MicroK8s and Multipass</title>
      <link>http://localhost:1313/2024/setting-up-kafka-with-microk8s-and-multipass/</link>
      <pubDate>Sat, 03 Aug 2024 10:00:00 +0800</pubDate>
      <guid>http://localhost:1313/2024/setting-up-kafka-with-microk8s-and-multipass/</guid>
      <description>&lt;p&gt;My homelab is a playground for experimenting with various tools and setups. However, for Proof of Concept (POC) environments, a lightweight and portable setup is often more suitable. In this post, I will guide you through setting up a MicroK8s environment in a virtual machine using Multipass. This POC demonstrates how Kafka can be set up in this environment. &lt;a href=&#34;https://multipass.run/&#34; target=&#34;_blank&#34;&gt;Multipass&lt;/a&gt; is a CLI tool for launching and managing VMs on Windows, Mac, and Linux, simulating a cloud environment with support for cloud-init.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gitea for K8s Cluster</title>
      <link>http://localhost:1313/archives/2020/gitea-on-kubernetes-pi-cluster/</link>
      <pubDate>Fri, 10 Jul 2020 20:00:00 +0800</pubDate>
      <guid>http://localhost:1313/archives/2020/gitea-on-kubernetes-pi-cluster/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/gitea-k8s/gitea-on-raspberry-pi-cluster.png&#34; alt=&#34;gitea-on-kubernetes-pi-cluster&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Having Gitea on Kubernetes Pi cluster, you will have full control over your personal Git repositories&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;gitea-for-kubernetes-cluster-on-pi&#34;&gt;Gitea for Kubernetes Cluster on Pi&lt;/h1&gt;&#xA;&lt;p&gt;&lt;em&gt;(Total Setup Time: 40 mins)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Similar to the previous post on &lt;a href=&#34;http://localhost:1313/archives/2020/gitea-for-raspberry-pi-cluster/&#34; target=&#34;_blank&#34;&gt;Gitea for MicroK8s Cluster&lt;/a&gt;, I will be setting up Git in the newly created &lt;a href=&#34;http://localhost:1313/archives/2020/kubernetes-cluster-on-raspberry-pi/&#34; target=&#34;_blank&#34;&gt;Kubernetes Cluster&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;setup-mysql&#34;&gt;Setup MySQL&lt;/h2&gt;&#xA;&lt;p&gt;&lt;em&gt;(15 mins)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;First, I download the &lt;a href=&#34;https://dev.mysql.com/doc/mysql-installation-excerpt/8.0/en/docker-mysql-getting-started.html&#34; target=&#34;_blank&#34;&gt;mysql-server docker&lt;/a&gt; image:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gitea for MicroK8s Cluster</title>
      <link>http://localhost:1313/archives/2020/gitea-for-raspberry-pi-cluster/</link>
      <pubDate>Mon, 29 Jun 2020 20:00:00 +0800</pubDate>
      <guid>http://localhost:1313/archives/2020/gitea-for-raspberry-pi-cluster/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/gitea/gitea-on-raspberry-pi-cluster.png&#34; alt=&#34;gitea-for-raspberry-pi-cluster&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;With Gitea for Raspberry Pi cluster, you can have your own self-hosted Git Service&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;gitea-for-raspberry-pi&#34;&gt;Gitea for Raspberry Pi&lt;/h1&gt;&#xA;&lt;p&gt;&lt;em&gt;(Total Setup Time: 45 mins)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://gitea.io/en-us/&#34; target=&#34;_blank&#34;&gt;Gitea&lt;/a&gt; is a painless self-hosted Git service. By hosting Gitea locally, our team is able to save cost and you also have more control over your server.&lt;/p&gt;&#xA;&lt;h2 id=&#34;preparation&#34;&gt;Preparation&lt;/h2&gt;&#xA;&lt;p&gt;&lt;em&gt;(5 min)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you are following my &lt;a href=&#34;http://localhost:1313/archives/2020/microk8s-cluster-on-raspberry-pi-8gb-part-1/&#34; target=&#34;_blank&#34;&gt;MicroK8s cluster&lt;/a&gt; setup, for each kubectl command, you need to append with microk8s. With this section, you can simply use &lt;em&gt;kubectl&lt;/em&gt;. First, install kubectl:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker for MicroK8s Cluster</title>
      <link>http://localhost:1313/archives/2020/docker-on-raspberry-pi-cluster/</link>
      <pubDate>Sun, 21 Jun 2020 20:00:00 +0800</pubDate>
      <guid>http://localhost:1313/archives/2020/docker-on-raspberry-pi-cluster/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/docker/docker-on-pi-cluster.png&#34; alt=&#34;docker-for-raspberry-pi&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;With Docker on Raspberry Pi cluster, you can run any containerized applications on your Pi Cluster&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;docker-on-raspberry&#34;&gt;Docker on Raspberry&lt;/h1&gt;&#xA;&lt;p&gt;&lt;em&gt;(Total Setup Time: 15 mins)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;To install &lt;a href=&#34;https://microk8s.io/docs/registry-images&#34; target=&#34;_blank&#34;&gt;Docker&lt;/a&gt; for Raspberry Pi Cluster, add &lt;strong&gt;ubuntu&lt;/strong&gt; user to the docker group:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install docker.io&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo usermod -aG docker ubuntu&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;su - ubuntu &lt;span style=&#34;color:#75715e&#34;&gt;# open a new shell with updated membership for the user&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>External Storage</title>
      <link>http://localhost:1313/archives/2020/external-storage-for-raspberry-pi-cluster/</link>
      <pubDate>Fri, 19 Jun 2020 20:00:00 +0800</pubDate>
      <guid>http://localhost:1313/archives/2020/external-storage-for-raspberry-pi-cluster/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/storage/external-storage-for-pi.png&#34; alt=&#34;external-storage-for-pi&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Expand storage capacity by using external storage for your Raspberry Pi Cluster&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;external-storage-for-pi-cluster&#34;&gt;External Storage for Pi Cluster&lt;/h1&gt;&#xA;&lt;p&gt;&lt;em&gt;(Total Setup Time: 35 mins)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;With the &lt;a href=&#34;http://localhost:1313/archives/2020/microk8s-cluster-on-raspberry-pi-8gb-part-1/&#34; target=&#34;_blank&#34;&gt;MicroK8s cluster&lt;/a&gt; in place, I decided to expand the External Storage for Raspberry Pi cluster. For this to work, I will use my external 640GB USB hard disk and configure MicroK8s default storage.&lt;/p&gt;&#xA;&lt;h2 id=&#34;mounting-external-storage&#34;&gt;Mounting External Storage&lt;/h2&gt;&#xA;&lt;p&gt;&lt;em&gt;(5 mins)&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>MicroK8s on Pi 4 8GB (II)</title>
      <link>http://localhost:1313/archives/2020/microk8s-cluster-on-raspberry-pi-8gb-part-2/</link>
      <pubDate>Tue, 09 Jun 2020 20:00:00 +0800</pubDate>
      <guid>http://localhost:1313/archives/2020/microk8s-cluster-on-raspberry-pi-8gb-part-2/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/microk8s2/leaf_nodes.png&#34; alt=&#34;raspberry-pi-leaf-nodes-for-microk8s-cluster&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Adding few low-cost Raspberry Pi nodes to improve your MicroK8s performance&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;microk8s-cluster-on-raspberry-pi-4-model-b-8gb-part-ii&#34;&gt;MicroK8s Cluster on Raspberry Pi 4 Model B 8GB (Part II)&lt;/h1&gt;&#xA;&lt;p&gt;&lt;em&gt;(Total Setup Time: 45 mins)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Following up from the &lt;a href=&#34;http://localhost:1313/archives/2020/jenkins-for-kubernetes-cluster-part-1/&#34; target=&#34;_blank&#34;&gt;previous post&lt;/a&gt;, for this second part, I will be adding new Raspberry Pi nodes to the MicroK8s Cluster. However, other than Raspberry Pi, you can also re-purpose some of your older unused laptop or PC and add them to your MicroK8s cluster.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MicroK8s on Pi 4 8GB (I)</title>
      <link>http://localhost:1313/archives/2020/microk8s-cluster-on-raspberry-pi-8gb-part-1/</link>
      <pubDate>Sat, 06 Jun 2020 20:00:00 +0800</pubDate>
      <guid>http://localhost:1313/archives/2020/microk8s-cluster-on-raspberry-pi-8gb-part-1/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/microk8s1/raspberrypi4_modelb.png&#34; alt=&#34;raspberry-pi-4-model-b&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Making your Raspberry Pi works for your MicroK8s cluster&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;microk8s-cluster-on-raspberry-pi-4-model-b-8gb-part-i&#34;&gt;MicroK8s Cluster on Raspberry Pi 4 Model B 8GB (Part I)&lt;/h1&gt;&#xA;&lt;p&gt;&lt;em&gt;(Total Setup Time: 40 mins)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;I am very excited to receive my Raspberry Pi 4 today. Since I do not have the microHDMI cable, I decided to go for a headless install. With this new Pi 8GB, I plan to check out on the &lt;a href=&#34;https://microk8s.io/&#34; target=&#34;_blank&#34;&gt;MicroK8s&lt;/a&gt;, a lightweight upstream K8s. This tutorial shows my steps for setting up the MicroK8s Cluster on Raspberry Pi 4 Model B 8GB.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
